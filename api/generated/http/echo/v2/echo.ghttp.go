// Code generated by protoc-gen-go-ghttp. DO NOT EDIT.
// versions:
// 	protoc-gen-go-http v0.0.1
// 	protoc             v3.21.5
// source: echo/v2/echo.proto

package v2

import (
	context "context"
	g "github.com/gogf/gf/v2/frame/g"
	v1 "hello_gf/api/generated/http/echo/v1"
)

var _ = context.Background()
var _ = g.Meta{}

// UnimplementedEchoServer
type UnimplementedEchoServer struct {
	impl EchoImpl
}

// RegisterEchoServer is an entry that must be implemented.
func RegisterEchoServer(impl EchoImpl) UnimplementedEchoServer {
	return UnimplementedEchoServer{impl: impl}
}

// SayIn
type SayIn struct {
	g.Meta  `path:"/v2/echo/say" method:"POST"`
	Content string `d:"hello world" ` // 提交内容
}

// SayOut
type SayOut struct {
	Data    *v1.SayReq
	Content string
	Data2   *SayIn
	Data3   int64
}

// Say  Echo returns the same message it receives.
func (Echo UnimplementedEchoServer) Say(ctx context.Context, req *SayIn) (*SayOut, error) {
	// 这个ctx key需要放到gf的常量中去
	ctx = context.WithValue(ctx, "ctx_http_pattern", "/v2/echo/say")
	ctx = context.WithValue(ctx, "ctx_http_method", "POST")
	ctx = context.WithValue(ctx, "ctx_grpc_pattern", "/proto.v2.Echo/Say")
	return Echo.impl.Say(ctx, req)
}

// EchoImpl is the server API for Echo service.
type EchoImpl interface {
	Say(ctx context.Context, req *SayIn) (*SayOut, error)
}
