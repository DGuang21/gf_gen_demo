// Code generated by protoc-gen-go-ghttp. DO NOT EDIT.
// Code generated by protoc-gen-go-ghttp. DO NOT EDIT.
// Code generated by protoc-gen-go-ghttp. DO NOT EDIT.

package v1

import (
	"context"

	"github.com/gogf/gf/v2/frame/g"
	"github.com/gogf/gf/v2/net/ghttp"
)

var (
	_ = context.Background()
	_ = ghttp.Request{}
	_ = g.Meta{}
)

type User struct {
	impl UserImpl
}

// SignInRequest // message: sign in request
type SignInRequest struct {
	g.Meta   `path:"/sign_in" method:"GET"`
	Name     string // 定义openapi的注释，在生成完代码后，会根据引入的插件自动生成相应的api文档以及注释
	Password string // 校验参数，这个已经不太方便直接替换到新的结构体里面了，所以下文是用了map来管理
	Passport string
}

// UserSignResponse
type UserSignResponse struct {
}

func (User User) UserSignIn(ctx context.Context, req *SignInRequest) (res *UserSignResponse, err error) {
	return User.impl.Say(ctx, req)
}

func NewUser(impl UserImpl) User {
	return User{impl: impl}
}

// UserProfileRequest
type UserProfileRequest struct {
	g.Meta `path:"/profile" method:"GET"`
	Name   string
}

// UserProfileResponse
type UserProfileResponse struct {
	Name  string
	Email string
	Phone string
}

func (User User) UserProfile(ctx context.Context, req *UserProfileRequest) (res *UserProfileResponse, err error) {
	return User.impl.Say(ctx, req)
}

func NewUser(impl UserImpl) User {
	return User{impl: impl}
}

type UserImpl interface {
	UserSignIn(ctx context.Context, req *SignInRequest) (res *UserSignResponse, err error)

	UserProfile(ctx context.Context, req *UserProfileRequest) (res *UserProfileResponse, err error)
}
