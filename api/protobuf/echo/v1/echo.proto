// protoc --go_out=plugins=grpc:. *.proto

syntax = "proto3";

package proto.v1;

option go_package = "/echo/v1";

service Echo{
    rpc Say(SayReq) returns (SayRes) {}
}

message SayReq {
    // 提交内容
    // v:  required|max:64
    // eg: hello world
    string content = 1;
    // only comment,not rule
    string nickname = 2;
    string sex = 3; // tail comment
    // 结构体调用
    // eg: nil
    SayRes data = 4;
    // map 调用
    // eg: nil
    map<string, SayRes> map_data = 5;
    // 数组调用
    // eg: nil
    repeated SayRes array_data = 6;
    // int
    repeated int32 int_data = 7;
    // uint32
    repeated uint32 uint32_data = 8;
    // uint64
    // eg: 0
    // v: required
    int64 uint64_data = 9;
}

message SayRes {
    string content = 1;
}


